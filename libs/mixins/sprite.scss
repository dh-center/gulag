// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$breadcrumbs-name: 'breadcrumbs';
$breadcrumbs-x: 0px;
$breadcrumbs-y: 45px;
$breadcrumbs-offset-x: 0px;
$breadcrumbs-offset-y: -45px;
$breadcrumbs-width: 24px;
$breadcrumbs-height: 24px;
$breadcrumbs-total-width: 83px;
$breadcrumbs-total-height: 69px;
$breadcrumbs-image: '../img/sprite.png';
$breadcrumbs: (0px, 45px, 0px, -45px, 24px, 24px, 83px, 69px, '../img/sprite.png', 'breadcrumbs',);
$tile-1-name: 'tile-1';
$tile-1-x: 57px;
$tile-1-y: 0px;
$tile-1-offset-x: -57px;
$tile-1-offset-y: 0px;
$tile-1-width: 13px;
$tile-1-height: 45px;
$tile-1-total-width: 83px;
$tile-1-total-height: 69px;
$tile-1-image: '../img/sprite.png';
$tile-1: (57px, 0px, -57px, 0px, 13px, 45px, 83px, 69px, '../img/sprite.png', 'tile-1',);
$tile-2-name: 'tile-2';
$tile-2-x: 20px;
$tile-2-y: 0px;
$tile-2-offset-x: -20px;
$tile-2-offset-y: 0px;
$tile-2-width: 21px;
$tile-2-height: 40px;
$tile-2-total-width: 83px;
$tile-2-total-height: 69px;
$tile-2-image: '../img/sprite.png';
$tile-2: (20px, 0px, -20px, 0px, 21px, 40px, 83px, 69px, '../img/sprite.png', 'tile-2',);
$tile-3-name: 'tile-3';
$tile-3-x: 0px;
$tile-3-y: 0px;
$tile-3-offset-x: 0px;
$tile-3-offset-y: 0px;
$tile-3-width: 20px;
$tile-3-height: 45px;
$tile-3-total-width: 83px;
$tile-3-total-height: 69px;
$tile-3-image: '../img/sprite.png';
$tile-3: (0px, 0px, 0px, 0px, 20px, 45px, 83px, 69px, '../img/sprite.png', 'tile-3',);
$tile-4-name: 'tile-4';
$tile-4-x: 41px;
$tile-4-y: 0px;
$tile-4-offset-x: -41px;
$tile-4-offset-y: 0px;
$tile-4-width: 16px;
$tile-4-height: 42px;
$tile-4-total-width: 83px;
$tile-4-total-height: 69px;
$tile-4-image: '../img/sprite.png';
$tile-4: (41px, 0px, -41px, 0px, 16px, 42px, 83px, 69px, '../img/sprite.png', 'tile-4',);
$tile-5-name: 'tile-5';
$tile-5-x: 70px;
$tile-5-y: 0px;
$tile-5-offset-x: -70px;
$tile-5-offset-y: 0px;
$tile-5-width: 13px;
$tile-5-height: 45px;
$tile-5-total-width: 83px;
$tile-5-total-height: 69px;
$tile-5-image: '../img/sprite.png';
$tile-5: (70px, 0px, -70px, 0px, 13px, 45px, 83px, 69px, '../img/sprite.png', 'tile-5',);
$spritesheet-width: 83px;
$spritesheet-height: 69px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($breadcrumbs, $tile-1, $tile-2, $tile-3, $tile-4, $tile-5,);
$spritesheet: (83px, 69px, '../img/sprite.png', $spritesheet-sprites,);

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
